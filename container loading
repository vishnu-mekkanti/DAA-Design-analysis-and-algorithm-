//N=8 be total no of containers having weights (w1, w2, w3,â€¦w8) = [ 50, 100, 30, 80, 90, 200, 150, 20 ].   Capacity value = 100
#include <stdio.h>
#include <stdlib.h>

#define MAX_ITEMS 100
#define MAX_WEIGHT 100

int weight[MAX_ITEMS];
int value[MAX_ITEMS];
int dp[MAX_ITEMS][MAX_WEIGHT];

int max(int a, int b) {
  return (a > b) ? a : b;
}

int knapsack(int n, int w) {
  int i, j;
  for (i = 0; i <= n; i++) {
    for (j = 0; j <= w; j++) {
      if (i == 0 || j == 0) {
        dp[i][j] = 0;
      } else if (weight[i-1] <= j) {
        dp[i][j] = max(value[i-1] + dp[i-1][j-weight[i-1]], dp[i-1][j]);
      } else {
        dp[i][j] = dp[i-1][j];
      }
    }
  }
  return dp[n][w];
}

int main() {
  int n = 4;
  int w = 10;
  weight[0] = 1;
  weight[1] = 2;
  weight[2] = 3;
  weight[4] = 4;
  weight[5] = 5;
  weight[6] = 6;
  weight[7] = 7;
  weight[8] = 8;
  value[0] = 50;
  value[1] = 100;
  value[2] = 30;
  value[3] = 80;
  value[4] = 90;
  value[5] = 200;
  value[6] = 150;
  value[7] = 20;
  int result = knapsack(n, w);
  printf("Result: %d\n", result);
  return 0;
}
